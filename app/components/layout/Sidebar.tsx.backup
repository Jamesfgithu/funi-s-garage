'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import { usePathname } from 'next/navigation'
import { cn } from '@/lib/utils'
import { 
  Mail, 
  Zap, 
  BookOpen, 
  Settings, 
  Home,
  Link2,
  ChevronDown,
  ChevronRight,
  ExternalLink,
  Loader2
} from 'lucide-react'
import { useAuthState } from 'react-firebase-hooks/auth'
import { auth } from '@/lib/firebase/config'
import { getUserSafelistLinks, calculateReadiness, SafelistLink } from '@/lib/firebase/safelist'
import Image from 'next/image'

const navigation = [
  {
    name: 'Dashboard',
    href: '/dashboard',
    icon: Home,
    description: 'Dashboard overview'
  },
  {
    name: 'Email Generator',
    href: '/dashboard/email-generator',
    icon: Zap,
    description: 'AI-powered email creation'
  },
  {
    name: 'Safelist Manager',
    href: '/dashboard/safelist-management',
    icon: Link2,
    description: 'Streamline Your Links'
  },
  {
    name: 'Settings',
    href: '/dashboard/settings',
    icon: Settings,
    description: 'Account & preferences'
  }
]

export function Sidebar() {
  const pathname = usePathname()
  const [user] = useAuthState(auth)
  const [safelistsExpanded, setSafelistsExpanded] = useState(false)
  const [safelists, setSafelists] = useState<SafelistLink[]>([])
  const [loadingSafelists, setLoadingSafelists] = useState(true)

  useEffect(() => {
    async function fetchSafelists() {
      if (user) {
        setLoadingSafelists(true)
        try {
          const userLinks = await getUserSafelistLinks(user.uid)
          // Sort alphabetically by name
          const sortedLinks = userLinks.sort((a, b) => a.name.localeCompare(b.name))
          setSafelists(sortedLinks)
        } catch (error) {
          console.error('Error fetching safelists:', error)
        } finally {
          setLoadingSafelists(false)
        }
      }
    }

    fetchSafelists()
  }, [user])

  const getStatusIndicator = (link: SafelistLink) => {
    const { status } = calculateReadiness(link.lastSubmitted ?? null, link.frequency)
    
    switch (status) {
      case 'ready':
        return <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
      case 'soon':
        return <div className="w-2 h-2 bg-amber-500 rounded-full" />
      case 'waiting':
        return <div className="w-2 h-2 bg-red-500 rounded-full" />
      default:
        return <div className="w-2 h-2 bg-muted-foreground rounded-full" />
    }
  }

  return (
    <div className="w-72 bg-gradient-to-b from-card/95 to-card/90 backdrop-blur-sm border-r border-border/50 flex flex-col shadow-lg">
      {/* Enhanced Logo Section with Your Custom Icon */}
      <div className="p-6 border-b border-border/30">
        <div className="flex items-center space-x-3">
          <div className="w-16 h-16 rounded-lg flex items-center justify-center shadow-md overflow-hidden">
            <Image
              src="/logo.ico"
              alt="Safelist AI Pro Logo"
              width={64}
              height={64}
              className="rounded-lg"
            />
          </div>
          <div>
            <h1 className="text-lg font-bold bg-gradient-to-r from-foreground to-foreground/80 bg-clip-text text-transparent">
              Safelist AI Pro
            </h1>
            <p className="text-xs text-muted-foreground">Version 3</p>
          </div>
        </div>
      </div>

      {/* Enhanced Navigation */}
      <nav className="flex-1 p-4 space-y-2">
        {navigation.map((item) => {
          const isActive = pathname === item.href
          return (
            <Link
              key={item.name}
              href={item.href}
              className={cn(
                'flex items-center space-x-3 px-4 py-3 rounded-lg text-sm transition-all duration-200 group',
                isActive
                  ? 'bg-gradient-to-r from-primary to-primary/90 text-primary-foreground shadow-lg'
                  : 'text-muted-foreground hover:text-foreground hover:bg-gradient-to-r hover:from-muted/50 hover:to-muted/30 hover:shadow-md'
              )}
            >
              <item.icon className="w-5 h-5" />
              <div className="flex-1">
                <div className="font-medium">{item.name}</div>
                <div className={cn(
                  "text-xs transition-colors",
                  isActive ? "text-primary-foreground/70" : "text-muted-foreground/70 group-hover:text-muted-foreground"
                )}>
                  {item.description}
                </div>
              </div>
            </Link>
          )
        })}

        {/* My Safelists Dropdown - Improved Icon */}
        {user && (
          <div className="mt-6">
            <button
              onClick={() => setSafelistsExpanded(!safelistsExpanded)}
              className="w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-sm transition-all duration-200 group text-muted-foreground hover:text-foreground hover:bg-gradient-to-r hover:from-muted/50 hover:to-muted/30 hover:shadow-md"
            >
              {safelistsExpanded ? (
                <ChevronDown className="w-4 h-4 group-hover:text-foreground" />
              ) : (
                <ChevronRight className="w-4 h-4 group-hover:text-foreground" />
              )}
              <Link2 className="w-5 h-5" />
              <div className="flex-1">
                <div className="font-medium">My Safelists</div>
                <div className="text-xs text-muted-foreground/70 group-hover:text-muted-foreground">
                  Quick access to your links
                </div>
              </div>
              {loadingSafelists && <Loader2 className="w-3 h-3 animate-spin" />}
            </button>

            {/* Safelists Dropdown Content */}
            {safelistsExpanded && (
              <div className="mt-2 ml-4 space-y-1 border-l border-border/30 pl-4">
                {loadingSafelists ? (
                  <div className="flex items-center gap-2 px-3 py-2 text-sm text-muted-foreground">
                    <Loader2 className="w-3 h-3 animate-spin" />
                    Loading safelists...
                  </div>
                ) : safelists.length === 0 ? (
                  <div className="px-3 py-2 text-sm text-muted-foreground">
                    No safelists added yet
                  </div>
                ) : (
                  safelists.map((safelist) => (
                    <a
                      key={safelist.id || 'unknown'}
                      href={safelist.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-3 px-3 py-2 rounded-md transition-all duration-200 group hover:bg-gradient-to-r hover:from-muted/40 hover:to-muted/20 text-sm"
                    >
                      {getStatusIndicator(safelist)}
                      <span className="flex-1 text-muted-foreground group-hover:text-foreground truncate">
                        {safelist.name}
                      </span>
                      <ExternalLink className="w-3 h-3 text-muted-foreground/50 group-hover:text-muted-foreground opacity-0 group-hover:opacity-100 transition-opacity" />
                    </a>
                  ))
                )}
              </div>
            )}
          </div>
        )}
      </nav>

      {/* Enhanced AI Credits Footer */}
      <div className="p-4 border-t border-border/30">
        <div className="text-xs text-muted-foreground">
          <div className="font-medium text-foreground">AI Credits</div>
          <div className="mt-2 space-y-1">
            <div className="flex justify-between">
              <span>Used today:</span>
              <span className="text-accent font-medium">12/50</span>
            </div>
            <div className="flex justify-between">
              <span>Monthly limit:</span>
              <span className="text-primary font-medium">150/500</span>
            </div>
          </div>
          {user && (
            <div className="mt-3 pt-2 border-t border-border/20">
              <div className="flex items-center gap-2">
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                <span className="text-xs text-green-500 font-medium">Connected</span>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}
